// Generated by view binder compiler. Do not edit!
package com.example.redsearch.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.redsearch.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityLoginBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final EditText password;

  @NonNull
  public final TextView passwordError;

  @NonNull
  public final TextView redSearch;

  @NonNull
  public final Button signIn;

  @NonNull
  public final Button signUp;

  @NonNull
  public final TextView userError;

  @NonNull
  public final EditText username;

  private ActivityLoginBinding(@NonNull ConstraintLayout rootView, @NonNull EditText password,
      @NonNull TextView passwordError, @NonNull TextView redSearch, @NonNull Button signIn,
      @NonNull Button signUp, @NonNull TextView userError, @NonNull EditText username) {
    this.rootView = rootView;
    this.password = password;
    this.passwordError = passwordError;
    this.redSearch = redSearch;
    this.signIn = signIn;
    this.signUp = signUp;
    this.userError = userError;
    this.username = username;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityLoginBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityLoginBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_login, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityLoginBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.password;
      EditText password = ViewBindings.findChildViewById(rootView, id);
      if (password == null) {
        break missingId;
      }

      id = R.id.passwordError;
      TextView passwordError = ViewBindings.findChildViewById(rootView, id);
      if (passwordError == null) {
        break missingId;
      }

      id = R.id.redSearch;
      TextView redSearch = ViewBindings.findChildViewById(rootView, id);
      if (redSearch == null) {
        break missingId;
      }

      id = R.id.signIn;
      Button signIn = ViewBindings.findChildViewById(rootView, id);
      if (signIn == null) {
        break missingId;
      }

      id = R.id.signUp;
      Button signUp = ViewBindings.findChildViewById(rootView, id);
      if (signUp == null) {
        break missingId;
      }

      id = R.id.userError;
      TextView userError = ViewBindings.findChildViewById(rootView, id);
      if (userError == null) {
        break missingId;
      }

      id = R.id.username;
      EditText username = ViewBindings.findChildViewById(rootView, id);
      if (username == null) {
        break missingId;
      }

      return new ActivityLoginBinding((ConstraintLayout) rootView, password, passwordError,
          redSearch, signIn, signUp, userError, username);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
